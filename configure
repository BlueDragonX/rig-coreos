#!/bin/bash

set -e -o pipefail

# Ensure that required executables exist before proceeding
which tar >/dev/null || fatal "tar not found"
which xz >/dev/null || fatal "xz not found"

PACKER_VERSION="0.7.5"

if echo "${PLATFORMS[@]}" | egrep -q "\bamazon.*" || [ -z "${PLATFORMS[@]}" ]; then
	test -n "$AWS_ACCOUNT_ID" || fatal "No AWS_ACCOUNT_ID in AWS config."
	test -n "$AWS_ACCESS_KEY" || fatal "No AWS_ACCESS_KEY in AWS config."
	test -n "$AWS_SECRET_KEY" || fatal "No AWS_SECRET_KEY in AWS config."
	test -n "$AWS_BUCKET" || fatal "No AWS_BUCKET in AWS config."
	test -n "$AWS_X509_CERT" || AWS_X509_CERT="$BASE/aws_cert.pem"
	test -n "$AWS_X509_KEY" || AWS_X509_KEY="$BASE/aws_key.pem"
	test -f "$AWS_X509_CERT" || fatal "AWS X509 certificate not found at '$AWS_X509_CERT'."
	test -f "$AWS_X509_KEY" || fatal "AWS X509 key not found at '$AWS_X509_KEY'."

	local tools_tarball="files/tools.tar.xz"
	tar --exclude '.*' -cJf ${tools_tarball} tools
	if ! [[ -s ${tools_tarball} ]]; then
		if [[ -e ${tools_tarball} ]]; then
			rm ${tools_tarball}
		fi
		fatal "failed to create ${tools_tarball}" >&2
	fi

	USERDATA+=("aws_account_id=$AWS_ACCOUNT_ID")
	USERDATA+=("aws_access_key=$AWS_ACCESS_KEY")
	USERDATA+=("aws_secret_key=$AWS_SECRET_KEY")
	USERDATA+=("aws_bucket=$AWS_BUCKET")
	USERDATA+=("aws_x509_cert=$AWS_X509_CERT")
	USERDATA+=("aws_x509_key=$AWS_X509_KEY")
fi
